services:
  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    container_name: petmanager-auth
    environment:
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - BREVO_USERNAME=${BREVO_USERNAME}
      - BREVO_SMTP_PASSWORD=${BREVO_SMTP_PASSWORD}
      - SENDER_EMAIL=${SENDER_EMAIL}
      - SENDER_NAME=${SENDER_NAME}
      - JAVA_OPTS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=production
    ports:
      - "8081:8081"
    networks:
      - petmanager-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  supplier-service:
    build:
      context: .
      dockerfile: supplier-service/Dockerfile
    container_name: petmanager-supplier
    environment:
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - JAVA_OPTS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=production
    ports:
      - "8082:8082"
    networks:
      - petmanager-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  notification-service:
    build:
      context: .
      dockerfile: notification-service/Dockerfile
    container_name: petmanager-notification
    environment:
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - BREVO_USERNAME=${BREVO_USERNAME}
      - BREVO_SMTP_PASSWORD=${BREVO_SMTP_PASSWORD}
      - SENDER_EMAIL=${SENDER_EMAIL}
      - SENDER_NAME=${SENDER_NAME}
      - JAVA_OPTS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=production
      - AUTH_SERVICE_URL=http://auth-service:8081
      - SUPPLIER_SERVICE_URL=http://supplier-service:8082
    ports:
      - "8083:8083"
    depends_on:
      - auth-service
      - supplier-service
    networks:
      - petmanager-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    container_name: petmanager-gateway
    environment:
      - JAVA_OPTS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=production
      - AUTH_SERVICE_URL=http://auth-service:8081
      - SUPPLIER_SERVICE_URL=http://supplier-service:8082
      - NOTIFICATION_SERVICE_URL=http://notification-service:8083
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - supplier-service
      - notification-service
    networks:
      - petmanager-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: petmanager-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api-gateway
    networks:
      - petmanager-network
    restart: unless-stopped

networks:
  petmanager-network:
    driver: bridge